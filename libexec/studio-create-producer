#!/usr/bin/env bash

# Usage: studio create-producer name
# Summary: Writes a skeleton producer plugin along with a FHiCL file to
#          configure it.
#
#          'studio create-producer' will also appropriately update your source
#          directory CMakeLists.txt file to compile and link your plugin
#          library.
#
#          NOTE: if you should decide to remove the generated source file,
#          you must edit the CMakeLists.txt to remove the build commands
#          related to it.
#
# Help: studio create-producer 
#
#     studio create-producer myProducer
#     OUTPUT:
#	src/myProducer_module.cc
#	src/myProducer.fcl
#       src/CMakeLists.txt

if [ -z $STUDIO_PROJECT_SRC_PATH ]; then
  echo "Please source the setup script"
  exit 1
fi

skeltag="producer"
ep="p1"
#checking for empty call
if [ -z "$1" ]; then
echo "'studio create-producer' requires specification of a plugin name."
echo "Please try 'studio help create-producer'"
exit 2
fi

name="$1"
cd "$STUDIO_PROJECT_SRC_PATH"
echo "$STUDIO_PROJECT_SRC_PATH"

if ( !  cetskelgen "$skeltag" "$name" ) ; then 
  echo cetskelgen "$skeltag" "$name" failed
  exit 2
fi

# ===========
# == cmake ==
# ===========
tag="module"
targ_name="$name"_"$tag"
src_name=""$targ_name".cc"
liblist="\${${tag}_lib_list}"

cat << EOT >> $STUDIO_PROJECT_SRC_PATH/CMakeLists.txt

#"$name" lib linking
add_library($targ_name SHARED $src_name)
target_link_libraries($targ_name $liblist)

EOT

touch $STUDIO_PROJECT_SRC_PATH/"$targ_name".fcl
cat << EOT >> $STUDIO_PROJECT_SRC_PATH/"$targ_name".fcl
#"$targ_name".fcl
#bare bones fcl test

physics:{
   ${skeltag}s:{
      $ep:{
         module_type: "$name"
      }
   }
   p:["$ep"]
}
EOT

echo "To build it now, use 'studio build'."
